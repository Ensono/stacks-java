<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ensono.stacks.modules</groupId>
    <artifactId>stacks-modules-parent</artifactId>
    <version>3.0.52</version>
  </parent>

  <groupId>com.amido.stacks.workloads</groupId>
  <artifactId>stacks-api</artifactId>
  <version>1.0.0</version>

  <name>stacks-api</name>
  <description>Demo project for Java</description>

  <properties>
    <stacks.core.api.version>1.0.5.11-RELEASE</stacks.core.api.version>
    <stacks.core.commons.version>2.0.7</stacks.core.commons.version>

    <!-- Stacks features -->
    <prop.aws></prop.aws>
    <aws.profile.name></aws.profile.name>

    <prop.azure></prop.azure>
    <azure.profile.name></azure.profile.name>

    <prop.cosmosdb></prop.cosmosdb>
    <profile.cosmosdb></profile.cosmosdb>

    <prop.dynamodb></prop.dynamodb>
    <profile.dynamodb></profile.dynamodb>

    <applicationinsights.version>2.6.4</applicationinsights.version>
    <azure.springboot.version>4.0.0</azure.springboot.version>
    <au.com.dius.pact-jvm-provider-spring.version>4.0.10</au.com.dius.pact-jvm-provider-spring.version>
    <au.com.dius.pact.consumer.version>4.6.15</au.com.dius.pact.consumer.version>
    <au.com.dius.pact.provider.version>4.6.15</au.com.dius.pact.provider.version>
    <aws-java-sdk-s3.version>1.12.779</aws-java-sdk-s3.version>
    <aspectjweaver.version>1.9.9.1</aspectjweaver.version>
    <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
    <spring.cloud.dependencies.version>2022.0.4</spring.cloud.dependencies.version>
    <pact.version>3.5.24</pact.version>
    
    <springdoc.openapi.version>2.2.0</springdoc.openapi.version>
    <spring.data.commons.version>3.4.0</spring.data.commons.version>
    <owasp-dependency-check-plugin.version>11.1.0</owasp-dependency-check-plugin.version>
    <junit-jupiter.version>5.11.3</junit-jupiter.version>

    <spring.data.dynamodb.version>5.2.5</spring.data.dynamodb.version>

    <manifold.version>2024.1.38</manifold.version>
    <fmt-maven-plugin.version>2.25</fmt-maven-plugin.version>

    <spring.cloud.starter.aws.secrets.manager.config.version>2.4.4
    </spring.cloud.starter.aws.secrets.manager.config.version>
    <aws-java-sdk.version>1.12.579</aws-java-sdk.version>
    <aws-xray-recorder-sdk.version>2.14.0</aws-xray-recorder-sdk.version>

    <!-- Set 'pact.broker.url' and 'pact.broker.token' -->
    <pact.broker.url/>
    <pact.broker.token/>
    <pact.api.name>JavaMenuAPI</pact.api.name>
    <pact.api.protocol>http</pact.api.protocol>
    <pact.api.host>localhost</pact.api.host>
    <pact.api.port>9000</pact.api.port>

    <prop.output.dir>../../stacks-preprocessor-output</prop.output.dir>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.awspring.cloud</groupId>
        <artifactId>spring-cloud-aws-dependencies</artifactId>
        <version>${spring.cloud.starter.aws.secrets.manager.config.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-bom</artifactId>
        <version>${aws-java-sdk.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-xray-recorder-sdk-bom</artifactId>
        <version>${aws-xray-recorder-sdk.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>


      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.openapi.version}</version>
      </dependency>

      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>auth0-spring-security-api</artifactId>
      </dependency>


    <!-- STACKS dependencies -->
    <!--
    <dependency>
      <groupId>com.amido.stacks.modules</groupId>
      <artifactId>stacks-core-api</artifactId>
      <version>${stacks.core.api.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.amido.stacks.modules</groupId>
      <artifactId>stacks-core-commons</artifactId>
      <version>${stacks.core.commons.version}</version>
    </dependency>
-->




      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring-context.version}</version>
      </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-properties-migrator</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bootstrap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.azure.spring</groupId>
      <artifactId>azure-spring-boot</artifactId>
      <version>${azure.springboot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>net.minidev</groupId>
          <artifactId>json-smart</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>applicationinsights-spring-boot-starter</artifactId>
      <version>${applicationinsights.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>applicationinsights-logging-logback</artifactId>
      <version>${applicationinsights.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart</artifactId>
    </dependency>

    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>

    <!-- Registering the Auth0 Dependency-->
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>auth0-spring-security-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>au.com.dius</groupId>
      <artifactId>pact-jvm-provider-spring</artifactId>
      <version>${au.com.dius.pact-jvm-provider-spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>au.com.dius.pact</groupId>
      <artifactId>consumer</artifactId>
      <version>${au.com.dius.pact.consumer.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.pitest</groupId>
      <artifactId>pitest-parent</artifactId>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>oauth2-oidc-sdk</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>${aws-java-sdk-s3.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
    </dependency>
      <dependency>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-commons</artifactId>
          <version>${spring.data.commons.version}</version>
      </dependency>

    <dependency>
      <groupId>systems.manifold</groupId>
      <artifactId>manifold</artifactId>
      <version>${manifold.version}</version>
    </dependency>

    <dependency>
      <groupId>com.spotify.fmt</groupId>
      <artifactId>fmt-maven-plugin</artifactId>
      <version>${fmt-maven-plugin.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <configuration>
          <mainClass>com.amido.stacks.workloads.Application</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <excludes>
            <exclude>**/AuthControllerImpl*</exclude>
            <exclude>**/ApplicationConfig*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>au.com.dius.pact.provider</groupId>
        <artifactId>maven</artifactId>
        <version>${au.com.dius.pact.provider.version}</version>
        <configuration>
          <pactBrokerUrl>${pact.broker.url}</pactBrokerUrl>
          <pactBrokerToken>${pact.broker.token}</pactBrokerToken>
          <systemPropertyVariables>
            <pact.verifier.publishResults>true</pact.verifier.publishResults>
          </systemPropertyVariables>
          <serviceProviders>
            <serviceProvider>
              <name>${pact.api.name}</name>
              <protocol>${pact.api.protocol}</protocol>
              <host>${pact.api.host}</host>
              <port>${pact.api.port}</port>
            </serviceProvider>
          </serviceProviders>
        </configuration>
      </plugin>
<!--      <plugin>-->
<!--        <groupId>com.coveo</groupId>-->
<!--        <artifactId>fmt-maven-plugin</artifactId>-->
<!--        <version>${fmt-maven-plugin.version}</version>-->
<!--        <configuration>-->
<!--          <displayFiles>true</displayFiles>-->
<!--          <verbose>true</verbose>-->
<!--          <filesNamePattern>.*\.java</filesNamePattern>-->
<!--          <additionalSourceDirectories/>-->
<!--          <skip>false</skip>-->
<!--          <skipSortingImports>false</skipSortingImports>-->
<!--          <style>google</style>-->
<!--        </configuration>-->
<!--      </plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <!--Specify Dependent checkstyle Edition-->
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${puppycrawl-tools-checkstyle.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>0.15</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>pitest</id>
            <phase>verify</phase>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <threads>15</threads>
          <historyInputFile>target/pitHistory.txt</historyInputFile>
          <historyOutputFile>target/pitHistory.txt</historyOutputFile>
          <timestampedReports>false</timestampedReports>
          <mutators>
            <value>STRONGER</value>
          </mutators>
          <outputFormats>
            <outputFormat>XML</outputFormat>
            <outputFormat>HTML</outputFormat>
          </outputFormats>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>17</source>
          <target>17</target>
          <encoding>UTF-8</encoding>
          <compilerArgs>
            <!-- Configure manifold plugin -->
            <arg>-Xplugin:Manifold</arg>
            <arg>-Amanifold.source.target=${prop.output.dir}</arg>
            <arg>${prop.aws}</arg>
            <arg>${prop.azure}</arg>
            <arg>${prop.cosmosdb}</arg>
            <arg>${prop.dynamodb}</arg>
          </compilerArgs>
          <!-- Add the processor path for the plugin -->
          <annotationProcessorPaths>
            <path>
              <groupId>systems.manifold</groupId>
              <artifactId>manifold-preprocessor</artifactId>
              <version>${manifold.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${org.mapstruct.binding.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${org.mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.ensono.stacks</groupId>
        <artifactId>stacks-maven-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>
                stacks-clean-project
              </goal>
              <goal>
                stacks-prepare-project
              </goal>
              <goal>
                stacks-prepare-project-tests
              </goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <projectLocation>${prop.output.dir}</projectLocation>
          <projectConfigFile>src/main/resources/templates/project-builder-config.json</projectConfigFile>
          <pomTemplateFile>src/main/resources/templates/</pomTemplateFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${fmt-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>${prop.output.dir}/src/main/java</sourceDirectory>
          <displayFiles>true</displayFiles>
          <verbose>true</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <additionalSourceDirectories/>
          <skip>false</skip>
          <skipSortingImports>false</skipSortingImports>
          <style>google</style>
        </configuration>
      </plugin>


    </plugins>
  </build>

  <profiles>

    <!-- START FEATURE PROFILES -->

    <profile>
      <id>aws</id>
      <properties>
        <prop.aws>-AUSE_AWS=</prop.aws>
        <aws.profile.name>aws</aws.profile.name>

        <spring.cloud.starter.aws.secrets.manager.config.version>2.4.4
        </spring.cloud.starter.aws.secrets.manager.config.version>
        <aws-java-sdk.version>1.12.579</aws-java-sdk.version>
        <aws-xray-recorder-sdk.version>2.14.0</aws-xray-recorder-sdk.version>
        <tomcat-embed.version>10.1.15</tomcat-embed.version>

      </properties>

      <dependencies>

        <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-core</artifactId>
          <version>${tomcat-embed.version}</version>
        </dependency>

        <!-- AWS SECRETS -->

        <dependency>
          <groupId>io.awspring.cloud</groupId>
          <artifactId>spring-cloud-starter-aws-secrets-manager-config</artifactId>
          <version>${spring.cloud.starter.aws.secrets.manager.config.version}</version>
        </dependency>
        <!-- AWS SECRETS -->

        <!-- AWS sdk -->
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-core</artifactId>
          <version>${aws-java-sdk.version}</version>
        </dependency>

        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-dynamodb</artifactId>
          <version>${aws-java-sdk.version}</version>
        </dependency>

        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-s3</artifactId>
          <version>${aws-java-sdk.version}</version>
        </dependency>

        <!-- XRAY -->
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-xray-recorder-sdk-spring</artifactId>
          <version>${aws-xray-recorder-sdk.version}</version>
        </dependency>
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-xray-recorder-sdk-metrics</artifactId>
          <version>${aws-xray-recorder-sdk.version}</version>
        </dependency>
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-xray-recorder-sdk-aws-sdk-instrumentor</artifactId>
          <version>${aws-xray-recorder-sdk.version}</version>
        </dependency>
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-xray-recorder-sdk-log4j</artifactId>
          <version>${aws-xray-recorder-sdk.version}</version>
        </dependency>
        <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-xray-recorder-sdk-apache-http</artifactId>
          <version>${aws-xray-recorder-sdk.version}</version>
        </dependency>
      </dependencies>

<!--      <dependencyManagement>-->
<!--        <dependencies>-->
<!--          <dependency>-->
<!--            <groupId>io.awspring.cloud</groupId>-->
<!--            <artifactId>spring-cloud-aws-dependencies</artifactId>-->
<!--            <version>${spring.cloud.starter.aws.secrets.manager.config.version}</version>-->
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
<!--          </dependency>-->
<!--          <dependency>-->
<!--            <groupId>com.amazonaws</groupId>-->
<!--            <artifactId>aws-java-sdk-bom</artifactId>-->
<!--            <version>${aws-java-sdk.version}</version>-->
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
<!--          </dependency>-->

<!--          <dependency>-->
<!--            <groupId>com.amazonaws</groupId>-->
<!--            <artifactId>aws-xray-recorder-sdk-bom</artifactId>-->
<!--            <version>${aws-xray-recorder-sdk.version}</version>-->
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
<!--          </dependency>-->
<!--        </dependencies>-->
<!--      </dependencyManagement>-->
    </profile>

    <profile>
      <id>azure</id>
      <properties>
        <prop.azure>-AUSE_AZURE=</prop.azure>
        <azure.profile.name>azure</azure.profile.name>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.azure.spring</groupId>
          <artifactId>azure-spring-boot</artifactId>
          <version>${azure.springboot.version}</version>
          <exclusions>
            <exclusion>
              <groupId>net.minidev</groupId>
              <artifactId>json-smart</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <dependency>
          <groupId>com.microsoft.azure</groupId>
          <artifactId>applicationinsights-spring-boot-starter</artifactId>
          <version>${applicationinsights.version}</version>
          <scope>runtime</scope>
        </dependency>

        <dependency>
          <groupId>com.microsoft.azure</groupId>
          <artifactId>applicationinsights-logging-logback</artifactId>
          <version>${applicationinsights.version}</version>
          <scope>runtime</scope>
          <exclusions>
            <exclusion>
              <groupId>ch.qos.logback</groupId>
              <artifactId>logback-core</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>cosmosdb</id>
      <properties>
        <prop.cosmosdb>-AUSE_COSMOSDB=</prop.cosmosdb>
        <profile.cosmosdb>cosmosdb</profile.cosmosdb>

        <azure-spring-data-cosmos.version>5.6.0</azure-spring-data-cosmos.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.azure</groupId>
          <artifactId>azure-spring-data-cosmos</artifactId>
          <version>${azure-spring-data-cosmos.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>dynamodb</id>
      <properties>
        <prop.cosmosdb>-AUSE_DYNAMODB=</prop.cosmosdb>
        <profile.cosmosdb>dynamodb</profile.cosmosdb>
      </properties>
      <dependencies>
        <dependency>
          <groupId>io.github.boostchicken</groupId>
          <artifactId>spring-data-dynamodb</artifactId>
          <version>${spring.data.dynamodb.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>owasp-dependency-check</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${owasp-dependency-check-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>test</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>spring.profiles.active</name>
          <value>test</value>
        </property>
      </activation>
    </profile>

    <profile>
      <id>local</id>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources/local</directory>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>update-permissions</id>
      <activation>
        <os>
          <family>!windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>Add execution rights on bash scripts</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>chmod</executable>
                  <arguments>
                    <argument>755</argument>
                    <argument>${project.basedir}/mvnw</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
